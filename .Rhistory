coef=2,
type="normal")
GOA_LC_apeglm_res_table <- lfcShrink(dds15_filt,
coef=2,
type="apeglm") # lfcThreshold = 0.585)
GOA_LC_ashr_res_table   <- lfcShrink(dds15_filt,
coef=2,
type="ashr")
GOA_LC_apeglm_df <- GOA_LC_apeglm_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
GOA_LC_normal_df <- GOA_LC_normal_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
GOA_LC_ashr_df <- GOA_LC_ashr_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
padj.cutoff <- 0.05 # pvalue cut-off
GOA_LC_sig_genes_apeglm <- GOA_LC_apeglm_df %>%
filter(padj < padj.cutoff)
GOA_LC_sig_genes_ashr<- GOA_LC_ashr_df %>%
filter(padj < padj.cutoff)
GOA_LC_sig_genes_normal<- GOA_LC_normal_df %>%
filter(padj < padj.cutoff)
#saving gene counts as a result of each filtration step
gene_counts_GOA_LC <- as.data.frame(c(nrow(GOA_LC_countmatrix),nrow(dds15_filt),(nrow(GOA_LC_countmatrix)-nrow(dds15_filt)),nrow(GOA_LC_normal_res_table),nrow(GOA_LC_apeglm_res_table),nrow(GOA_LC_ashr_res_table),nrow(GOA_LC_sig_genes_apeglm), nrow(GOA_LC_sig_genes_ashr),nrow(GOA_LC_sig_genes_normal)))
row.names(gene_counts_GOA_LC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05", "DEG_ashr-p0.05","DEG_normal-p0.05")
View(gene_counts_GOA_LC)
# Write csv's with significant genes
#ignore rowname numbers with row.names = FALSE, not included as separate column
write.table(GOA_LC_apeglm_df, file = "output/DEG_lists/Gill/GOA_LC.csv", row.names = FALSE)
write.table(GOA_LC_sig_genes_apeglm, file = "output/DEG_lists/Gill/siggene_OA_G.csv", row.names = FALSE)
colnames(gene_counts_GOA_LC) <- "count"
write.table(gene_counts_GOA_LC,      file = "output/DEG_lists/Gill/gene_counts_GOA_LC.csv",        row.names = TRUE)
pdf(file= "output/DEG_lists/Gill/GOA_LC_MA_plots.pdf" )
pdf(file= "output/DEG_lists/Gill/GOA_LC_MA_plots.pdf" )
par(mfrow=c(1,3), mar=c(4,4,2,1))
xlim <- c(1,1e5); ylim <- c(-3,3)
DESeq2::plotMA(GOA_LC_normal_res_table, xlim=xlim, ylim=ylim, main="normal", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(GOA_LC_apeglm_res_table, xlim=xlim, ylim=ylim, main="apeglm", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(GOA_LC_ashr_res_table, xlim=xlim, ylim=ylim, main="ashr", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
dev.off()
write.table(FOW_TC_siggenes, file = "output/DEG_lists/Foot/FOA_TC_siggene.csv", row.names = FALSE)
write.table(FOW_TC_siggenes, file = "output/DEG_lists/Foot/FOW_TC_siggene.csv", row.names = FALSE)
write.table(FOA_TC_siggenes, file = "output/DEG_lists/Foot/FOA_TC_siggene.csv", row.names = FALSE)
#Run shrinkage estimates
FOW_LC_normal_res_table <- lfcShrink(dds13_filt,
coef=2,
type="normal")
FOW_LC_apeglm_res_table <- lfcShrink(dds13_filt,
coef=2,
type="apeglm") # lfcThreshold = 0.585)
FOW_LC_ashr_res_table   <- lfcShrink(dds13_filt,
coef=2,
type="ashr")
FOW_LC_apeglm_df <- FOW_LC_apeglm_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
FOW_LC_normal_df <- FOW_LC_normal_res_table  %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
FOW_LC_ashr_df <- FOW_LC_ashr_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
padj.cutoff <- 0.05 # pvalue cut-off
FOW_LC_siggenes <- FOW_LC_apeglm_df %>%
filter(padj < padj.cutoff)
FOW_LC_siggenes_apeglm <- FOW_LC_apeglm_df %>%
filter(padj < padj.cutoff)
FOW_LC_sig_genes_ashr<- FOW_LC_ashr_df %>%
filter(padj < padj.cutoff)
FOW_LC_sig_genes_normal<- FOW_LC_normal_df %>%
filter(padj < padj.cutoff)
#saving gene counts as a result of each filtration step
gene_counts_FOW_LC <- as.data.frame(c(nrow(FOW_LC_countmatrix),nrow(dds13_filt),(nrow(FOW_LC_countmatrix)-nrow(dds13_filt)),nrow(FOW_LC_normal_res_table),nrow(FOW_LC_apeglm_res_table),nrow(FOW_LC_ashr_res_table),nrow(FOW_LC_siggenes_apeglm),nrow(FOW_LC_sig_genes_ashr),nrow(FOW_LC_sig_genes_normal)))
row.names(gene_counts_FOW_LC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05")
row.names(gene_counts_FOW_LC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05", "DEG_ashr-p0.05","DEG_normal-p0.05")
colnames(gene_counts_FOW_LC) <- "count"
View(gene_counts_FOW_LC)
write.table(gene_counts_FOW_LC, file = "output/DEG_lists/Foot/gene_counts_FOW_LC.csv", row.names = TRUE)
# Write csv's with significant genes
#ignore rowname numbers with row.names = FALSE, not included as separate column
write.table(FOW_LC_apeglm_df, file = "output/DEG_lists/Foot/FOW_LC_apeglm.csv", row.names = FALSE)
pdf(file= "output/DEG_lists/Foot/FOW_LC_MA_plots.pdf" )
par(mfrow=c(1,3), mar=c(4,4,2,1))
xlim <- c(1,1e5); ylim <- c(-3,3)
DESeq2::plotMA(FOW_LC_normal_res_table, xlim=xlim, ylim=ylim, main="normal", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(FOW_LC_apeglm_res_table, xlim=xlim, ylim=ylim, main="apeglm", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(FOW_LC_ashr_res_table, xlim=xlim, ylim=ylim, main="ashr", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
dev.off()
#Run shrinkage estimates
GOW_LC_normal_res_table <- lfcShrink(dds16_filt,
coef=2,
type="normal")
GOW_LC_apeglm_res_table <- lfcShrink(dds16_filt,
coef=2,
type="apeglm") # lfcThreshold = 0.585)
GOW_LC_ashr_res_table   <- lfcShrink(dds16_filt,
coef=2,
type="ashr")
GOW_LC_apeglm_df <- GOW_LC_apeglm_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
GOW_LC_normal_df <- GOW_LC_normal_res_table  %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
GOW_LC_ashr_df <- GOW_LC_ashr_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
# Write csv's with significant genes
#ignore rowname numbers with row.names = FALSE, not included as separate column
write.table(GOW_LC_apeglm_df, file = "output/DEG_lists/Gill/GOW_LC_apeglm.csv", row.names = FALSE)
padj.cutoff <- 0.05 # pvalue cut-off
GOW_LC_siggenes_apeglm <- GOW_LC_apeglm_df %>%
filter(padj < padj.cutoff)
GOW_LC_sig_genes_ashr<- GOW_LC_ashr_df %>%
filter(padj < padj.cutoff)
GOW_LC_sig_genes_normal<- GOW_LC_normal_df %>%
filter(padj < padj.cutoff)
#saving gene counts as a result of each filtration step
gene_counts_GOW_LC <- as.data.frame(c(nrow(GOW_LC_countmatrix),nrow(dds16_filt),(nrow(GOW_LC_countmatrix)-nrow(dds16_filt)),nrow(GOW_LC_normal_res_table),nrow(GOW_LC_apeglm_res_table),nrow(GOW_LC_ashr_res_table),nrow(GOW_LC_siggenes_apeglm),nrow(GOW_LC_sig_genes_ashr),nrow(GOW_LC_sig_genes_normal)))
row.names(gene_counts_GOW_LC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05", "DEG_ashr-p0.05","DEG_normal-p0.05")
View(gene_counts_GOW_LC)
write.table(FOW_LC_siggenes, file = "output/DEG_lists/Foot/FOW_LC_siggene.csv", row.names = FALSE)
write.table(gene_counts_FOA_LC, file = "output/DEG_lists/Foot/gene_counts_FOA_LC.csv", row.names = TRUE)
View(gene_counts_FOW_LC)
View(gene_counts_GOW_LC)
GOW_LC_siggenes_apeglm <- GOW_LC_apeglm_df %>%
filter(padj < padj.cutoff)
GOW_LC_sig_genes_ashr<- GOW_LC_ashr_df %>%
filter(padj < padj.cutoff)
GOW_LC_sig_genes_normal<- GOW_LC_normal_df %>%
filter(padj < padj.cutoff)
write.table(GOW_LC_siggenes_apeglm, file = "output/DEG_lists/Foot/GOW_LC_siggene_apeglm.csv", row.names = FALSE)
View(gene_counts_GOW_LC)
write.table(gene_counts_GOW_LC, file = "output/DEG_lists/Gill/gene_counts_GOW_LC.csv", row.names = TRUE)
pdf(file= "output/DEG_lists/Gill/GOW_LC_MA_plots.pdf" )
par(mfrow=c(1,3), mar=c(4,4,2,1))
xlim <- c(1,1e5); ylim <- c(-3,3)
DESeq2::plotMA(GOW_LC_normal_res_table, xlim=xlim, ylim=ylim, main="normal", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(GOW_LC_apeglm_res_table, xlim=xlim, ylim=ylim, main="apeglm", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(GOW_LC_ashr_res_table, xlim=xlim, ylim=ylim, main="ashr", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
dev.off()
#Run shrinkage estimates
FDO_LC_normal_res_table <- lfcShrink(dds14_filt,
coef=2,
type="normal")
FDO_LC_apeglm_res_table <- lfcShrink(dds14_filt,
coef=2,
type="apeglm") # lfcThreshold = 0.585)
FDO_LC_apeglm_res_table <- lfcShrink(dds14_filt,
coef=2,
type="apeglm") # lfcThreshold = 0.585)
lfcThreshold = 0.585)
FDO_LC_ashr_res_table   <- lfcShrink(dds14_filt,
coef=2,
type="ashr")
FDO_LC_apeglm_res_table <- lfcShrink(dds14_filt,
coef=2,
type="apeglm")
FDO_LC_apeglm_df <- FDO_LC_apeglm_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
FDO_LC_normal_df <- FDO_LC_normal_res_table  %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
FDO_LC_ashr_df <- FDO_LC_ashr_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
# Write csv's with significant genes
#ignore rowname numbers with row.names = FALSE, not included as separate column
write.table(FDO_LC_apeglm_df, file = "output/DEG_lists/Foot/FDO_LC_apeglm.csv", row.names = FALSE)
padj.cutoff <- 0.05 # pvalue cut-off
padj.cutoff <- 0.05 # pvalue cut-off
FDO_LC_siggenes_apeglm <- FDO_LC_apeglm_df %>%
filter(padj < padj.cutoff)
FDO_LC_sig_genes_ashr<- FDO_LC_ashr_df %>%
filter(padj < padj.cutoff)
FDO_LC_sig_genes_normal<- FDO_LC_normal_df %>%
filter(padj < padj.cutoff)
#saving gene counts as a result of each filtration step
gene_counts_FDO_LC <- as.data.frame(c(nrow(FDO_LC_countmatrix),nrow(dds14_filt),(nrow(FDO_LC_countmatrix)-nrow(dds14_filt)),nrow(FDO_LC_normal_res_table),nrow(FDO_LC_apeglm_res_table),nrow(FDO_LC_ashr_res_table),nrow(FDO_LC_siggenes_apeglm),nrow(FDO_LC_sig_genes_ashr),nrow(FDO_LC_sig_genes_normal)))
row.names(gene_counts_FDO_LC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05","DEG_ashr-p0.05","DEG_normal-p0.05")
View(gene_counts_FDO_LC)
write.table(FDO_LC_siggenes_apeglm, file = "output/DEG_lists/Foot/FDO_LC_siggene_apeglm.csv", row.names = FALSE)
#write.csv for the gene count summaries
colnames(gene_counts_FDO_LC) <- "count"
write.table(gene_counts_FDO_LC, file = "output/DEG_lists/Foot/gene_counts_FDO_LC.csv", row.names = TRUE)
pdf(file= "output/DEG_lists/Foot/FDO_LC_MA_plots.pdf" )
par(mfrow=c(1,3), mar=c(4,4,2,1))
xlim <- c(1,1e5); ylim <- c(-3,3)
DESeq2::plotMA(FDO_LC_normal_res_table, xlim=xlim, ylim=ylim, main="normal", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(FDO_LC_apeglm_res_table, xlim=xlim, ylim=ylim, main="apeglm", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(FDO_LC_ashr_res_table, xlim=xlim, ylim=ylim, main="ashr", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
dev.off()
#Run shrinkage estimates
GDO_LC_normal_res_table <- lfcShrink(dds17_filt,
coef=2,
type="normal")
GDO_LC_apeglm_res_table <- lfcShrink(dds17_filt,
coef=2,
type="apeglm") # lfcThreshold = 0.585)
GDO_LC_ashr_res_table   <- lfcShrink(dds17_filt,
coef=2,
type="ashr")
GDO_LC_apeglm_df <- GDO_LC_apeglm_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
GDO_LC_normal_df <- GDO_LC_normal_res_table  %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
GDO_LC_ashr_df <- GDO_LC_ashr_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
GDO_LC_siggenes <- GDO_LC_apeglm_df %>%
filter(padj < padj.cutoff)
GDO_LC_sig_genes_ashr<- GDO_LC_ashr_df %>%
filter(padj < padj.cutoff)
GDO_LC_sig_genes_normal<- GDO_LC_normal_df %>%
filter(padj < padj.cutoff)
# Write csv's with significant genes
#ignore rowname numbers with row.names = FALSE, not included as separate column
write.table(GDO_LC_apeglm_df, file = "output/DEG_lists/Gill/GDO_LC_apeglm.csv", row.names = FALSE)
write.table(GDO_LC_siggenes, file = "output/DEG_lists/Gill/GDO_LC_siggene_apeglm.csv", row.names = FALSE)
#saving gene counts as a result of each filtration step
gene_counts_GDO_LC <- as.data.frame(c(nrow(countmatrix_GDO),nrow(dds17_filt),(nrow(countmatrix_GDO)-nrow(dds17_filt)),nrow(GDO_LC_normal_res_table),nrow(GDO_LC_apeglm_res_table),nrow(GDO_LC_ashr_res_table),nrow(GDO_LC_siggenes_apeglm),nrow(GDO_LC_sig_genes_ashr),nrow(GDO_LC_sig_genes_normal)))
#saving gene counts as a result of each filtration step
gene_counts_GDO_LC <- as.data.frame(c(nrow(countmatrix_GDO),nrow(dds17_filt),(nrow(countmatrix_GDO)-nrow(dds17_filt)),nrow(GDO_LC_normal_res_table),nrow(GDO_LC_apeglm_res_table),nrow(GDO_LC_ashr_res_table),nrow(GDO_LC_siggenes),nrow(GDO_LC_sig_genes_ashr),nrow(GDO_LC_sig_genes_normal)))
row.names(gene_counts_GDO_LC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05","DEG_ashr-p0.05","DEG_normal-p0.05")
colnames(gene_counts_GDO_LC) <- "count"
write.table(gene_counts_GDO_LC, file = "output/DEG_lists/Gill/gene_counts_GDO_LC.csv", row.names = TRUE)
pdf(file= "output/DEG_lists/Gill/GDO_LC_MA_plots.pdf" )
par(mfrow=c(1,3), mar=c(4,4,2,1))
xlim <- c(1,1e5); ylim <- c(-3,3)
DESeq2::plotMA(GDO_LC_normal_res_table, xlim=xlim, ylim=ylim, main="normal", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(GDO_LC_apeglm_res_table, xlim=xlim, ylim=ylim, main="apeglm", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(GDO_LC_ashr_res_table, xlim=xlim, ylim=ylim, main="ashr", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
dev.off()
FOA_LC_sig_genes_ashr<- FOA_LC_ashr_df %>%
filter(padj < padj.cutoff)
FOA_LC_sig_genes_normal<- FOA_LC_normal_df %>%
filter(padj < padj.cutoff)
#saving gene counts as a result of each filtration step
gene_counts_FOA_LC <- as.data.frame(c(nrow(FOA_LC_countmatrix),nrow(dds12_filt),(nrow(FOA_LC_countmatrix)-nrow(dds12_filt)),nrow(FOA_LC_normal_res_table),nrow(FOA_LC_apeglm_res_table),nrow(FOA_LC_ashr_res_table),nrow(FOA_LC_siggenes),nrow(FOA_LC_sig_genes_ashr),nrow(FOA_LC_sig_genes_normal)))
row.names(gene_counts_FOA_LC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05", "DEG_ashr-p0.05","DEG_normal-p0.05")
colnames(gene_counts_FOA_LC) <- "count"
write.table(gene_counts_FOA_LC, file = "output/DEG_lists/Foot/gene_counts_FOA_LC.csv", row.names = TRUE)
View(gene_counts_FOA_LC)
FOA_TC_sig_genes_ashr<- FOA_TC_ashr_df %>%
filter(padj < padj.cutoff)
FOA_TC_sig_genes_normal<- FOA_TC_normal_df %>%
filter(padj < padj.cutoff)
#saving gene counts as a result of each filtration step
gene_counts_FOA_TC <- as.data.frame(c(nrow(countmatrix_FOA),nrow(dds4_filt),(nrow(countmatrix_FOA)-nrow(dds4_filt)),nrow(FOA_TC_normal_res_table),nrow(FOA_TC_apeglm_res_table),nrow(FOA_TC_ashr_res_table),nrow(FOA_TC_siggenes),nrow(FOA_LC_sig_genes_ashr),nrow(FOA_LC_sig_genes_normal)))
row.names(gene_counts_FOA_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05", "DEG_ashr-p0.05","DEG_normal-p0.05")
colnames(gene_counts_FOA_TC) <- "count"
#saving gene counts as a result of each filtration step
gene_counts_FOA_TC <- as.data.frame(c(nrow(countmatrix_FOA),nrow(dds4_filt),(nrow(countmatrix_FOA)-nrow(dds4_filt)),nrow(FOA_TC_normal_res_table),nrow(FOA_TC_apeglm_res_table),nrow(FOA_TC_ashr_res_table),nrow(FOA_TC_siggenes),nrow(FOA_TC_sig_genes_ashr),nrow(FOA_TC_sig_genes_normal)))
row.names(gene_counts_FOA_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05", "DEG_ashr-p0.05","DEG_normal-p0.05")
colnames(gene_counts_FOA_TC) <- "count"
View(gene_counts_FOA_TC)
GOA_TC_sig_genes_ashr<- GOA_TC_ashr_df %>%
filter(padj < padj.cutoff)
GOA_TC_sig_genes_normal<- GOA_TC_normal_df %>%
filter(padj < padj.cutoff)
#saving gene counts as a result of each filtration step
gene_counts_GOA_TC <- as.data.frame(c(nrow(countmatrix_GOA),nrow(dds8_filt),(nrow(countmatrix_GOA)-nrow(dds8_filt)),nrow(GOA_TC_normal_res_table),nrow(GOA_TC_apeglm_res_table),nrow(GOA_TC_ashr_res_table),nrow(GOA_TC_sig_genes),nrow(GOA_TC_sig_genes_ashr),nrow(GOA_TC_sig_genes_normal)))
row.names(gene_counts_GOA_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05","DEG_ashr-p0.05","DEG_normal-p0.05")
colnames(gene_counts_GOA_TC) <- "count"
View(gene_counts_GOA_TC)
FOW_TC_sig_genes_ashr<- FOW_TC_ashr_df %>%
filter(padj < padj.cutoff)
FOW_TC_sig_genes_normal<- FOW_TC_normal_df %>%
filter(padj < padj.cutoff)
FOW_TC_sig_genes_normal<- FOW_TC_normal_df %>%
filter(padj < padj.cutoff)
#saving gene counts as a result of each filtration step
gene_counts_FOW_TC <- as.data.frame(c(nrow(countmatrix_FOW),nrow(dds5_filt),(nrow(countmatrix_FOW)-nrow(dds5_filt)),nrow(FOW_TC_normal_res_table),nrow(FOW_TC_apeglm_res_table),nrow(FOW_TC_ashr_res_table),nrow(FOW_TC_siggenes),nrow(FOW_TC_sig_genes_ashr),nrow(FOW_TC_sig_genes_normal)))
row.names(gene_counts_FOW_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05","DEG_ashr-p0.05","DEG_normal-p0.05")
colnames(gene_counts_FOW_TC) <- "count"
View(gene_counts_FOW_TC)
GOW_TC_sig_genes_ashr<- GOW_TC_ashr_df %>%
filter(padj < padj.cutoff)
GOW_TC_sig_genes_normal<- GOW_TC_normal_df %>%
filter(padj < padj.cutoff)
row.names(gene_counts_GOW_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05","DEG_ashr-p0.05","DEG_normal-p0.05")
row.names(gene_counts_GOW_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05","DEG_ashr-p0.05","DEG_normal-p0.05")
#saving gene counts as a result of each filtration step
gene_counts_GOW_TC <- as.data.frame(c(nrow(countmatrix_GOW),nrow(dds9_filt),(nrow(countmatrix_GOW)-nrow(dds9_filt)),nrow(GOW_TC_normal_res_table),nrow(GOW_TC_apeglm_res_table),nrow(GOW_TC_ashr_res_table),nrow(GOW_TC_siggenes),nrow(GOW_TC_sig_genes_ashr),nrow(GOW_TC_sig_genes_normal)))
row.names(gene_counts_GOW_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05","DEG_ashr-p0.05","DEG_normal-p0.05")
colnames(gene_counts_GOW_TC) <- "count"
View(gene_counts_GOW_TC)
FDO_TC_sig_genes_ashr<- FDO_TC_ashr_df %>%
filter(padj < padj.cutoff)
FDO_TC_sig_genes_normal<- FDO_TC_normal_df %>%
filter(padj < padj.cutoff)
#saving gene counts as a result of each filtration step
gene_counts_FDO_TC <- as.data.frame(c(nrow(countmatrix_FDO),nrow(dds6_filt),(nrow(countmatrix_FDO)-nrow(dds6_filt)),nrow(FDO_TC_normal_res_table),nrow(FDO_TC_apeglm_res_table),nrow(FDO_TC_ashr_res_table),nrow(FDO_TC_siggenes),nrow(FDO_TC_sig_genes_ashr),nrow(FDO_TC_sig_genes_normal)))
row.names(gene_counts_FDO_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05","DEG_ashr-p0.05","DEG_normal-p0.05")
#write.csv for the gene count summaries
colnames(gene_counts_FDO_TC) <- "count"
View(gene_counts_FDO_TC)
View(gene_counts_FDO_LC)
write.table(gene_counts_FDO_TC, file = "output/DEG_lists/Foot/gene_counts_FDO_TC.csv", row.names = TRUE)
write.table(gene_counts_GOW_TC, file = "output/DEG_lists/Gill/gene_counts_GOW_TC.csv", row.names = TRUE)
write.table(gene_counts_FOW_TC, file = "output/DEG_lists/Foot/gene_counts_FOW_TC.csv", row.names = TRUE)
write.table(gene_counts_GOA_TC,      file = "output/DEG_lists/Gill/gene_counts_GOA_TC.csv",        row.names = TRUE)
write.table(gene_counts_FOA_TC, file = "output/DEG_lists/Foot/gene_counts_FOA_TC.csv", row.names = TRUE)
GDO_TC_sig_genes_ashr<- GDO_TC_ashr_df %>%
filter(padj < padj.cutoff)
GDO_TC_sig_genes_normal<- GDO_TC_normal_df %>%
filter(padj < padj.cutoff)
#saving gene counts as a result of each filtration step
gene_counts_GDO_TC <- as.data.frame(c(nrow(countmatrix_GDO),nrow(dds10_filt),(nrow(countmatrix_GDO)-nrow(dds10_filt)),nrow(GDO_TC_normal_res_table),nrow(GDO_TC_apeglm_res_table),nrow(GDO_TC_ashr_res_table),nrow(GDO_TC_siggenes),nrow(GDO_TC_sig_genes_ashr),nrow(GDO_TC_sig_genes_normal)))
row.names(gene_counts_GDO_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05","DEG_ashr-p0.05","DEG_normal-p0.05")
colnames(gene_counts_GDO_TC) <- "count"
write.table(gene_counts_GDO_TC, file = "output/DEG_lists/Gill/gene_counts_GDO_TC.csv", row.names = TRUE)
View(gene_counts_GDO_TC)
write.table(gene_counts_GDO_TC, file = "output/DEG_lists/Gill/gene_counts_GDO_TC.csv", row.names = TRUE)
FLC_TC_sig_genes_ashr<- FLC_TC_ashr_df %>%
filter(padj < padj.cutoff)
GLC_TC_sig_genes_ashr<- GLC_TC_ashr_df %>%
filter(padj < padj.cutoff)
GLC_TC_sig_genes_normal<- GLC_TC_normal_df %>%
filter(padj < padj.cutoff)
GLC_TC_sig_genes_ashr<- GLC_TC_ashr_df %>%
filter(padj < padj.cutoff)
GLC_TC_sig_genes_normal<- GLC_TC_normal_df %>%
filter(padj < padj.cutoff)
#saving gene counts as a result of each filtration step
gene_counts_GLC_TC <- as.data.frame(c(nrow(countmatrix_Gcon),nrow(dds11_filt),(nrow(countmatrix_Gcon)-nrow(dds11_filt)),nrow(GLC_TC_normal_res_table),nrow(GLC_TC_apeglm_res_table),nrow(GLC_TC_ashr_res_table),nrow(GLC_TC_siggenes),nrow(GLC_TC_sig_genes_ashr),nrow(GLC_TC_sig_genes_normal)))
row.names(gene_counts_GLC_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05")
#saving gene counts as a result of each filtration step
gene_counts_GLC_TC <- as.data.frame(c(nrow(countmatrix_Gcon),nrow(dds11_filt),(nrow(countmatrix_Gcon)-nrow(dds11_filt)),nrow(GLC_TC_normal_res_table),nrow(GLC_TC_apeglm_res_table),nrow(GLC_TC_ashr_res_table),nrow(GLC_TC_siggenes),nrow(GLC_TC_sig_genes_ashr),nrow(GLC_TC_sig_genes_normal)))
row.names(gene_counts_GLC_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05")
colnames(gene_counts_GLC_TC) <- "count"
write.table(gene_counts_GLC_TC, file = "output/DEG_lists/Gill/gene_counts_GLC_TC.csv", row.names = TRUE)
View(gene_counts_GLC_TC)
FLC_TC_sig_genes_ashr<- FLC_TC_ashr_df %>%
filter(padj < padj.cutoff)
FLC_TC_sig_genes_normal<- FLC_TC_normal_df %>%
filter(padj < padj.cutoff)
#saving gene counts as a result of each filtration step
gene_counts_FLC_TC <- as.data.frame(c(nrow(countmatrix_Fcon),nrow(dds7_filt),(nrow(countmatrix_Fcon)-nrow(dds7_filt)),nrow(FLC_TC_normal_res_table),nrow(FLC_TC_apeglm_res_table),nrow(FLC_TC_ashr_res_table),nrow(FLC_TC_siggenes),nrow(FLC_TC_sig_genes_ashr),nrow(FLC_TC_sig_genes_normal)))
row.names(gene_counts_FLC_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05","DEG_ashr-p0.05","DEG_normal-p0.05")
colnames(gene_counts_FLC_TC) <- "count"
View(gene_counts_FLC_TC)
write.table(gene_counts_FLC_TC, file = "output/DEG_lists/Foot/gene_counts_FLC_TC.csv", row.names = TRUE)
View(gene_counts)
View(gene_counts_FOA_TC)
View(FDO_LC_siggenes_apeglm)
## clear
rm(list=ls())
# List of packages we want to install (run every time)
load.lib<-c("RColorBrewer","readxl","ggpubr","tidyverse","tibble","stringr","beepr","gplots")
# Select only the packages that aren't currently installed (run every time)
install.lib <- load.lib[!load.lib %in% installed.packages()]
# And finally we install the missing packages, including their dependency.
for(lib in install.lib) install.packages(lib,dependencies=TRUE)
# After the installation process completes, we load all packages.
sapply(load.lib,require,character=TRUE)
## clear
rm(list=ls())
# List of packages we want to install (run every time)
load.lib<-c("RColorBrewer","readxl","ggpubr","tidyverse","tibble","stringr","beepr","gplots")
# Select only the packages that aren't currently installed (run every time)
install.lib <- load.lib[!load.lib %in% installed.packages()]
# And finally we install the missing packages, including their dependency.
for(lib in install.lib) install.packages(lib,dependencies=TRUE)
# After the installation process completes, we load all packages.
sapply(load.lib,require,character=TRUE)
detach("tidyverse")
detach(tidyverse), character.only=TRUE)
detach(tidyverse, character.only=TRUE)
detach("tidyverse", character.only=TRUE)
invisible(lapply(paste0('package:', names(sessionInfo()$otherPkgs)), detach, character.only=TRUE, unload=TRUE))
## clear
rm(list=ls())
# List of packages we want to install (run every time)
load.lib<-c("RColorBrewer","readxl","ggpubr","tidyverse","tibble","stringr","beepr","gplots")
# Select only the packages that aren't currently installed (run every time)
install.lib <- load.lib[!load.lib %in% installed.packages()]
# And finally we install the missing packages, including their dependency.
for(lib in install.lib) install.packages(lib,dependencies=TRUE)
# After the installation process completes, we load all packages.
sapply(load.lib,require,character=TRUE)
#invisible(lapply(paste0('package:', names(sessionInfo()$otherPkgs)), detach, character.only=TRUE, unload=TRUE))
library(tidyverse)
FDO_TC_siggene <- read.delim("FDO_TC_siggene.csv", sep = ",", header = TRUE)
getwd()
setwd("/home/shared/8TB_HDD_02/graceleuchtenberger/Github/byssus-exp-analysis/output/DEG_lists/Foot")
getwd
getwd()
FDO_TC_siggene <- read.delim("FDO_TC_siggene.csv", sep = ",", header = TRUE)
FDO_TC_siggene <- read.delim("FDO_TC_siggene.csv", sep = ",", header = TRUE)
getwd()
getwd()
FDO_TC_siggene <- read.delim("/output/DEG_lists/Foot/FDO_TC_siggene.csv", sep = ",", header = TRUE)
getwd()
FDO_TC_siggene <- read.delim("/output/DEG_lists/Foot/FDO_TC_siggene.csv", sep = ",", header = TRUE)
FDO_TC_siggene <- read.delim("~/output/DEG_lists/Foot/FDO_TC_siggene.csv", sep = ",", header = TRUE)
FDO_TC_siggene <- read.delim("output/DEG_lists/Foot/FDO_TC_siggene.csv", sep = ",", header = TRUE)
FDO_LC_siggene <- read.delim("output/DEG_lists/Foot/FDO_LC_siggene_apeglm.csv", sep = ",", header = TRUE)
View(FDO_TC_siggene)
View(FDO_LC_siggene)
FDO_TC_siggene <- read.delim("output/DEG_lists/Foot/FDO_TC_siggene.csv", sep = "\t", header = TRUE)
FDO_LC_siggene <- read.delim("output/DEG_lists/Foot/FDO_LC_siggene_apeglm.csv", sep = "\t", header = TRUE)
View(FDO_LC_siggene)
FDO_TC_siggene <- read.delim("output/DEG_lists/Foot/FDO_TC_siggene.csv", sep = " ", header = TRUE)
FDO_LC_siggene <- read.delim("output/DEG_lists/Foot/FDO_LC_siggene_apeglm.csv", sep = " ", header = TRUE)
View(FDO_TC_siggene)
FDO_sigs <- left_join(FDO_TC_siggene, FDO_LC_siggene, by = 'gene')
library(tidyverse)
library(dplyr)
FDO_sigs <- left_join(FDO_TC_siggene, FDO_LC_siggene, by = 'gene')
View(FDO_sigs)
FDO_sigs_right <- right_join(FDO_TC_siggene, FDO_LC_siggene, by = 'gene')
View(FDO_sigs_right)
FDO_sigs_left <- left_join(FDO_TC_siggene, FDO_LC_siggene, by = 'gene')
FDO_sigs_right <- right_join(FDO_TC_siggene, FDO_LC_siggene, by = 'gene')
FDO_sigs <- inter_join(FDO_TC_siggene, FDO_LC_siggene, by = 'gene')
FDO_sigs <- inner_join(FDO_TC_siggene, FDO_LC_siggene, by = 'gene')
View(FDO_sigs)
