par(mfrow=c(1,3), mar=c(4,4,2,1))
xlim <- c(1,1e5); ylim <- c(-3,3)
DESeq2::plotMA(FTC_LC_normal_res_table, xlim=xlim, ylim=ylim, main="normal", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(FTC_LC_apeglm_res_table, xlim=xlim, ylim=ylim, main="apeglm", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(FTC_LC_ashr_res_table, xlim=xlim, ylim=ylim, main="ashr", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
dev.off()
View(gene_counts_FTC_LC)
View(gene_counts_GDO_LC)
View(gene_counts_FDO_LC)
View(gene_counts_FOA_LC)
View(gene_counts_FOW_LC)
keep <-  rowSums(DESeq2::counts(dds8) >= 10) >= ncol(GTC_LC_countmatrix)/3
dds8_filt <- dds8[keep,]
#Run shrinkage estimates
GTC_LC_normal_res_table <- lfcShrink(dds8_filt,
coef=2,
type="normal")
GTC_LC_apeglm_res_table <- lfcShrink(dds8_filt,
coef=2,
type="apeglm") # lfcThreshold = 0.585)
GTC_LC_ashr_res_table   <- lfcShrink(dds8_filt,
coef=2,
type="ashr")
#put results tables into data frames
GTC_LC_apeglm_df <- GTC_LC_apeglm_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
GTC_LC_normal_df <- GTC_LC_normal_res_table  %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
GTC_LC_ashr_df <- GTC_LC_ashr_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
# Write csv's with significant genes
#ignore rowname numbers with row.names = FALSE, not included as separate column
write.table(GTC_LC_apeglm_df, file = "output/DEG_lists/Gill/GTC_LC_apeglm.csv", row.names = FALSE)
padj.cutoff <- 0.05 # pvalue cut-off
GTC_LC_siggenes <- GTC_LC_apeglm_df %>%
filter(padj < padj.cutoff)
GTC_LC_sig_genes_ashr<- GTC_LC_ashr_df %>%
filter(padj < padj.cutoff)
GTC_LC_sig_genes_normal<- GTC_LC_normal_df %>%
filter(padj < padj.cutoff)
write.table(GTC_LC_siggenes, file = "output/DEG_lists/Gill/GTC_LC_siggene.csv", row.names = FALSE)
#saving gene counts as a result of each filtration step
gene_counts_GTC_LC <- as.data.frame(c(nrow(GTC_LC_countmatrix),nrow(dds8_filt),(nrow(GTC_LC_countmatrix)-nrow(dds8_filt)),nrow(GTC_LC_normal_res_table),nrow(GTC_LC_apeglm_res_table),nrow(GTC_LC_ashr_res_table),nrow(GTC_LC_siggenes),nrow(GTC_LC_sig_genes_ashr),nrow(GTC_LC_sig_genes_normal)))
row.names(gene_counts_GTC_LC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05","DEG_ashr-p0.05",
"DEG_normal-p0.05")
#write.csv for the gene count summaries
colnames(gene_counts_GTC_LC) <- "count"
write.table(gene_counts_GTC_LC, file = "output/DEG_lists/Gill/gene_counts_GTC_LC.csv", row.names = TRUE)
# Plot MA
pdf(file= "output/DEG_lists/Gill/GTC_LC_MA_plots.pdf" )
par(mfrow=c(1,3), mar=c(4,4,2,1))
xlim <- c(1,1e5); ylim <- c(-3,3)
DESeq2::plotMA(GTC_LC_normal_res_table, xlim=xlim, ylim=ylim, main="normal", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(GTC_LC_apeglm_res_table, xlim=xlim, ylim=ylim, main="apeglm", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(GTC_LC_ashr_res_table, xlim=xlim, ylim=ylim, main="ashr", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
dev.off()
View(gene_counts_GTC_LC)
# Filtering: keep genes that have at least 10 counts across 1/3 of the samples - https://support.bioconductor.org/p/110307/
keep <- rowSums(DESeq2::counts(dds9) >= 10) >= ncol(FOA_TC_countmatrix)/3
dds9_filt <- dds9[keep,]
#Run shrinkage estimates
FOA_TC_normal_res_table <- lfcShrink(dds9_filt,
coef=2,
type="normal")
FOA_TC_apeglm_res_table <- lfcShrink(dds9_filt,
coef=2,
type="apeglm") # lfcThreshold = 0.585)
FOA_TC_ashr_res_table   <- lfcShrink(dds9_filt,
coef=2,
type="ashr")
#put results tables into data frames
FOA_TC_apeglm_df <- FOA_TC_apeglm_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
FOA_TC_normal_df <- FOA_TC_normal_res_table  %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
FOA_TC_ashr_df <- FOA_TC_ashr_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
# Write csv's with significant genes
#ignore rowname numbers with row.names = FALSE, not included as separate column
write.table(FOA_TC_apeglm_df, file = "output/DEG_lists/Foot/FOA_TC_apeglm.csv", row.names = FALSE)
padj.cutoff <- 0.05 # pvalue cut-off
FOA_TC_siggenes <- FOA_TC_apeglm_df %>%
filter(padj < padj.cutoff)
FOA_TC_sig_genes_ashr<- FOA_TC_ashr_df %>%
filter(padj < padj.cutoff)
FOA_TC_sig_genes_normal<- FOA_TC_normal_df %>%
filter(padj < padj.cutoff)
write.table(FOA_TC_siggenes, file = "output/DEG_lists/Foot/FOA_TC_siggene.csv", row.names = FALSE)
#saving gene counts as a result of each filtration step
gene_counts_FOA_TC <- as.data.frame(c(nrow(FOA_TC_countmatrix),nrow(dds9_filt),(nrow(FOA_TC_countmatrix)-nrow(dds9_filt)),nrow(FOA_TC_normal_res_table),nrow(FOA_TC_apeglm_res_table),nrow(FOA_TC_ashr_res_table),nrow(FOA_TC_siggenes),nrow(FOA_TC_sig_genes_ashr),nrow(FOA_TC_sig_genes_normal)))
row.names(gene_counts_FOA_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05", "DEG_ashr-p0.05","DEG_normal-p0.05")
#write.csv for the gene count summaries
colnames(gene_counts_FOA_TC) <- "count"
write.table(gene_counts_FOA_TC, file = "output/DEG_lists/Foot/gene_counts_FOA_TC.csv", row.names = TRUE)
# Plot MA
#This graph has like nothing near zero for apeglm, maybe something went wrong
pdf(file= "output/DEG_lists/Foot/FOA_TC_MA_plots.pdf" )
par(mfrow=c(1,3), mar=c(4,4,2,1))
xlim <- c(1,1e5); ylim <- c(-3,3)
DESeq2::plotMA(FOA_TC_normal_res_table, xlim=xlim, ylim=ylim, main="normal", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(FOA_TC_apeglm_res_table, xlim=xlim, ylim=ylim, main="apeglm", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(FOA_TC_ashr_res_table, xlim=xlim, ylim=ylim, main="ashr", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
dev.off()
View(gene_counts_FOA_TC)
keep <- rowSums(DESeq2::counts(dds12) >= 10) >= ncol(GOA_TC_countmatrix)/3
dds12_filt <- dds12[keep,]
#Run shrinkage estimates
GOA_TC_normal_res_table <- lfcShrink(dds12_filt,
coef=2,
type="normal")
GOA_TC_apeglm_res_table <- lfcShrink(dds12_filt,
coef=2,
type="apeglm") # lfcThreshold = 0.585)
GOA_TC_ashr_res_table   <- lfcShrink(dds12_filt,
coef=2,
type="ashr")
#put results tables into data frames
GOA_TC_apeglm_df <- GOA_TC_apeglm_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
GOA_TC_normal_df <- GOA_TC_normal_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
GOA_TC_ashr_df <- GOA_TC_ashr_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
# Write csv's with significant genes
#ignore rowname numbers with row.names = FALSE, not included as separate column
write.table(GOA_TC_apeglm_df, file = "output/DEG_lists/Gill/GOA_TC.csv", row.names = FALSE)
padj.cutoff <- 0.05 # pvalue cut-off
GOA_TC_sig_genes_apeglm <- GOA_TC_apeglm_df %>%
filter(padj < padj.cutoff)
GOA_TC_sig_genes_ashr<- GOA_TC_ashr_df %>%
filter(padj < padj.cutoff)
GOA_TC_sig_genes_normal<- GOA_TC_normal_df %>%
filter(padj < padj.cutoff)
write.table(GOA_TC_sig_genes_apeglm, file = "output/DEG_lists/Gill/GOA_TC_siggene.csv", row.names = FALSE)
#saving gene counts as a result of each filtration step
gene_counts_GOA_TC <- as.data.frame(c(nrow(GOA_TC_countmatrix),nrow(dds12_filt),(nrow(GOA_TC_countmatrix)-nrow(dds12_filt)),nrow(GOA_TC_normal_res_table),nrow(GOA_TC_apeglm_res_table),nrow(GOA_TC_ashr_res_table),nrow(GOA_TC_sig_genes_apeglm), nrow(GOA_TC_sig_genes_ashr),nrow(GOA_TC_sig_genes_normal)))
row.names(gene_counts_GOA_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05", "DEG_ashr-p0.05","DEG_normal-p0.05")
#write.csv for the gene count summaries
colnames(gene_counts_GOA_TC) <- "count"
write.table(gene_counts_GOA_TC,      file = "output/DEG_lists/Gill/gene_counts_GOA_TC.csv",        row.names = TRUE)
# Plot MA
pdf(file= "output/DEG_lists/Gill/GOA_TC_MA_plots.pdf" )
par(mfrow=c(1,3), mar=c(4,4,2,1))
xlim <- c(1,1e5); ylim <- c(-3,3)
DESeq2::plotMA(GOA_TC_normal_res_table, xlim=xlim, ylim=ylim, main="normal", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(GOA_TC_apeglm_res_table, xlim=xlim, ylim=ylim, main="apeglm", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(GOA_TC_ashr_res_table, xlim=xlim, ylim=ylim, main="ashr", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
dev.off()
View(gene_counts_GOA_TC)
#Run shrinkage estimates
FOW_TC_normal_res_table <- lfcShrink(dds10_filt,
coef=2,
type="normal")
FOW_TC_apeglm_res_table <- lfcShrink(dds10_filt,
coef=2,
type="apeglm") # lfcThreshold = 0.585)
FOW_TC_ashr_res_table   <- lfcShrink(dds10_filt,
coef=2,
type="ashr")
#put results tables into data frames
FOW_TC_apeglm_df <- FOW_TC_apeglm_res_table %>%
data.frame() %>%
rownames_to_column(var="gene")
FOW_TC_normal_df <- FOW_TC_normal_res_table  %>%
data.frame() %>%
rownames_to_column(var="gene")
FOW_TC_ashr_df <- FOW_TC_ashr_res_table %>%
data.frame() %>%
rownames_to_column(var="gene")
# Write csv's with significant genes
#ignore rowname numbers with row.names = FALSE, not included as separate column
write.table(FOW_TC_apeglm_df, file = "output/DEG_lists/Foot/FOW_TC_apeglm.csv", row.names = FALSE)
padj.cutoff <- 0.05 # pvalue cut-off
FOW_TC_siggenes_apeglm <- FOW_TC_apeglm_df %>%
filter(padj < padj.cutoff)
FOW_TC_sig_genes_ashr<- FOW_TC_ashr_df %>%
filter(padj < padj.cutoff)
FOW_TC_sig_genes_normal<- FOW_TC_normal_df %>%
filter(padj < padj.cutoff)
write.table(FOW_TC_siggenes_apeglm, file = "output/DEG_lists/Foot/FOW_TC_siggene.csv", row.names = FALSE)
#saving gene counts as a result of each filtration step
gene_counts_FOW_TC <- as.data.frame(c(nrow(FOW_TC_countmatrix),nrow(dds10_filt),(nrow(FOW_TC_countmatrix)-nrow(dds10_filt)),nrow(FOW_TC_normal_res_table),nrow(FOW_TC_apeglm_res_table),nrow(FOW_TC_ashr_res_table),nrow(FOW_TC_siggenes_apeglm),nrow(FOW_TC_sig_genes_ashr),nrow(FOW_TC_sig_genes_normal)))
row.names(gene_counts_FOW_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05", "DEG_ashr-p0.05","DEG_normal-p0.05")
#write.csv for the gene count summaries
colnames(gene_counts_FOW_TC) <- "count"
write.table(gene_counts_FOW_TC, file = "output/DEG_lists/Foot/gene_counts_FOW_TC.csv", row.names = TRUE)
# Plot MA
pdf(file= "output/DEG_lists/Foot/FOW_TC_MA_plots.pdf" )
par(mfrow=c(1,3), mar=c(4,4,2,1))
xlim <- c(1,1e5); ylim <- c(-3,3)
DESeq2::plotMA(FOW_TC_normal_res_table, xlim=xlim, ylim=ylim, main="normal", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(FOW_TC_apeglm_res_table, xlim=xlim, ylim=ylim, main="apeglm", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(FOW_TC_ashr_res_table, xlim=xlim, ylim=ylim, main="ashr", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
dev.off()
#Volcano Plots
# library(ggplot2)
# FOW_TC_apeglm_df$significant <- FOW_TC_apeglm_df$padj < 0.05
#
# ggplot(FOW_TC_apeglm_df, aes(x=log2FoldChange, y=-log10(padj))) +
#     geom_point(aes(color=significant)) +
#     scale_color_manual(values=c("gray", "red")) +
#     theme_minimal() +
#     labs(title="Volcano Plot",
#          x="Log2 Fold Change",
#          y="-log10 p-value") +
#     theme(plot.title = element_text(hjust = 0.5))
View(gene_counts_FOW_TC)
keep <- rowSums(DESeq2::counts(dds13) >= 10) >= ncol(GOW_TC_countmatrix)/3
dds13_filt <- dds13[keep,]
keep <- rowSums(DESeq2::counts(dds10) >= 10) >= ncol(FOW_TC_countmatrix)/3
dds10_filt <- dds10[keep,]
#Run shrinkage estimates
FOW_TC_normal_res_table <- lfcShrink(dds10_filt,
coef=2,
type="normal")
FOW_TC_apeglm_res_table <- lfcShrink(dds10_filt,
coef=2,
type="apeglm") # lfcThreshold = 0.585)
FOW_TC_ashr_res_table   <- lfcShrink(dds10_filt,
coef=2,
type="ashr")
#put results tables into data frames
FOW_TC_apeglm_df <- FOW_TC_apeglm_res_table %>%
data.frame() %>%
rownames_to_column(var="gene")
FOW_TC_normal_df <- FOW_TC_normal_res_table  %>%
data.frame() %>%
rownames_to_column(var="gene")
FOW_TC_ashr_df <- FOW_TC_ashr_res_table %>%
data.frame() %>%
rownames_to_column(var="gene")
# Write csv's with significant genes
#ignore rowname numbers with row.names = FALSE, not included as separate column
write.table(FOW_TC_apeglm_df, file = "output/DEG_lists/Foot/FOW_TC_apeglm.csv", row.names = FALSE)
padj.cutoff <- 0.05 # pvalue cut-off
FOW_TC_siggenes_apeglm <- FOW_TC_apeglm_df %>%
filter(padj < padj.cutoff)
FOW_TC_sig_genes_ashr<- FOW_TC_ashr_df %>%
filter(padj < padj.cutoff)
FOW_TC_sig_genes_normal<- FOW_TC_normal_df %>%
filter(padj < padj.cutoff)
write.table(FOW_TC_siggenes_apeglm, file = "output/DEG_lists/Foot/FOW_TC_siggene.csv", row.names = FALSE)
#saving gene counts as a result of each filtration step
gene_counts_FOW_TC <- as.data.frame(c(nrow(FOW_TC_countmatrix),nrow(dds10_filt),(nrow(FOW_TC_countmatrix)-nrow(dds10_filt)),nrow(FOW_TC_normal_res_table),nrow(FOW_TC_apeglm_res_table),nrow(FOW_TC_ashr_res_table),nrow(FOW_TC_siggenes_apeglm),nrow(FOW_TC_sig_genes_ashr),nrow(FOW_TC_sig_genes_normal)))
row.names(gene_counts_FOW_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05", "DEG_ashr-p0.05","DEG_normal-p0.05")
#write.csv for the gene count summaries
colnames(gene_counts_FOW_TC) <- "count"
write.table(gene_counts_FOW_TC, file = "output/DEG_lists/Foot/gene_counts_FOW_TC.csv", row.names = TRUE)
# Plot MA
pdf(file= "output/DEG_lists/Foot/FOW_TC_MA_plots.pdf" )
par(mfrow=c(1,3), mar=c(4,4,2,1))
xlim <- c(1,1e5); ylim <- c(-3,3)
DESeq2::plotMA(FOW_TC_normal_res_table, xlim=xlim, ylim=ylim, main="normal", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(FOW_TC_apeglm_res_table, xlim=xlim, ylim=ylim, main="apeglm", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(FOW_TC_ashr_res_table, xlim=xlim, ylim=ylim, main="ashr", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
dev.off()
#Volcano Plots
# library(ggplot2)
# FOW_TC_apeglm_df$significant <- FOW_TC_apeglm_df$padj < 0.05
#
# ggplot(FOW_TC_apeglm_df, aes(x=log2FoldChange, y=-log10(padj))) +
#     geom_point(aes(color=significant)) +
#     scale_color_manual(values=c("gray", "red")) +
#     theme_minimal() +
#     labs(title="Volcano Plot",
#          x="Log2 Fold Change",
#          y="-log10 p-value") +
#     theme(plot.title = element_text(hjust = 0.5))
View(gene_counts_FOW_TC)
#Run shrinkage estimates
GOW_TC_normal_res_table <- lfcShrink(dds13_filt,
coef=2,
type="normal")
GOW_TC_apeglm_res_table <- lfcShrink(dds13_filt,
coef=2,
type="apeglm") # lfcThreshold = 0.585)
GOW_TC_ashr_res_table   <- lfcShrink(dds13_filt,
coef=2,
type="ashr")
#put results tables into data frames
GOW_TC_apeglm_df <- GOW_TC_apeglm_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
GOW_TC_normal_df <- GOW_TC_normal_res_table  %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
GOW_TC_ashr_df <- GOW_TC_ashr_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
# Write csv's with significant genes
#ignore rowname numbers with row.names = FALSE, not included as separate column
write.table(GOW_TC_apeglm_df, file = "output/DEG_lists/Gill/GOW_TC_apeglm.csv", row.names = FALSE)
padj.cutoff <- 0.05 # pvalue cut-off
GOW_TC_siggenes_apeglm <- GOW_TC_apeglm_df %>%
filter(padj < padj.cutoff)
GOW_TC_sig_genes_ashr<- GOW_TC_ashr_df %>%
filter(padj < padj.cutoff)
GOW_TC_sig_genes_normal<- GOW_TC_normal_df %>%
filter(padj < padj.cutoff)
write.table(GOW_TC_siggenes_apeglm, file = "output/DEG_lists/Gill/GOW_TC_siggene_apeglm.csv", row.names = FALSE)
#saving gene counts as a result of each filtration step
gene_counts_GOW_TC <- as.data.frame(c(nrow(GOW_TC_countmatrix),nrow(dds13_filt),(nrow(GOW_TC_countmatrix)-nrow(dds13_filt)),nrow(GOW_TC_normal_res_table),nrow(GOW_TC_apeglm_res_table),nrow(GOW_TC_ashr_res_table),nrow(GOW_TC_siggenes_apeglm),nrow(GOW_TC_sig_genes_ashr),nrow(GOW_TC_sig_genes_normal)))
row.names(gene_counts_GOW_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05", "DEG_ashr-p0.05","DEG_normal-p0.05")
#write.csv for the gene count summaries
colnames(gene_counts_GOW_TC) <- "count"
write.table(gene_counts_GOW_TC, file = "output/DEG_lists/Gill/gene_counts_GOW_TC.csv", row.names = TRUE)
# Plot MA
pdf(file= "output/DEG_lists/Gill/GOW_TC_MA_plots.pdf" )
par(mfrow=c(1,3), mar=c(4,4,2,1))
xlim <- c(1,1e5); ylim <- c(-3,3)
DESeq2::plotMA(GOW_TC_normal_res_table, xlim=xlim, ylim=ylim, main="normal", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(GOW_TC_apeglm_res_table, xlim=xlim, ylim=ylim, main="apeglm", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(GOW_TC_ashr_res_table, xlim=xlim, ylim=ylim, main="ashr", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
dev.off()
keep <- rowSums(DESeq2::counts(dds11) >= 10) >= ncol(FDO_TC_countmatrix)/3
dds11_filt <- dds11[keep,]
#Run shrinkage estimates
FDO_TC_normal_res_table <- lfcShrink(dds11_filt,
coef=2,
type="normal")
FDO_TC_apeglm_res_table <- lfcShrink(dds11_filt,
coef=2,
type="apeglm")
FDO_TC_ashr_res_table   <- lfcShrink(dds11_filt,
coef=2,
type="ashr")
#put results tables into data frames
FDO_TC_apeglm_df <- FDO_TC_apeglm_res_table %>%
data.frame() %>%
rownames_to_column(var="gene")
FDO_TC_normal_df <- FDO_TC_normal_res_table  %>%
data.frame() %>%
rownames_to_column(var="gene")
FDO_TC_ashr_df <- FDO_TC_ashr_res_table %>%
data.frame() %>%
rownames_to_column(var="gene")
# Write csv's with significant genes
#ignore rowname numbers with row.names = FALSE, not included as separate column
write.table(FDO_TC_apeglm_df, file = "output/DEG_lists/Foot/FDO_TC_apeglm.csv", row.names = FALSE)
padj.cutoff <- 0.05 # pvalue cut-off
FDO_TC_siggenes_apeglm <- FDO_TC_apeglm_df %>%
filter(padj < padj.cutoff)
FDO_TC_sig_genes_ashr<- FDO_TC_ashr_df %>%
filter(padj < padj.cutoff)
FDO_TC_sig_genes_normal<- FDO_TC_normal_df %>%
filter(padj < padj.cutoff)
write.table(FDO_TC_siggenes_apeglm, file = "output/DEG_lists/Foot/FDO_TC_siggene_apeglm.csv", row.names = FALSE)
#saving gene counts as a result of each filtration step
gene_counts_FDO_TC <- as.data.frame(c(nrow(FDO_TC_countmatrix),nrow(dds11_filt),(nrow(FDO_TC_countmatrix)-nrow(dds11_filt)),nrow(FDO_TC_normal_res_table),nrow(FDO_TC_apeglm_res_table),nrow(FDO_TC_ashr_res_table),nrow(FDO_TC_siggenes_apeglm),nrow(FDO_TC_sig_genes_ashr),nrow(FDO_TC_sig_genes_normal)))
row.names(gene_counts_FDO_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05","DEG_ashr-p0.05","DEG_normal-p0.05")
#write.csv for the gene count summaries
colnames(gene_counts_FDO_TC) <- "count"
write.table(gene_counts_FDO_TC, file = "output/DEG_lists/Foot/gene_counts_FDO_TC.csv", row.names = TRUE)
# Plot MA
pdf(file= "output/DEG_lists/Foot/FDO_TC_MA_plots.pdf" )
par(mfrow=c(1,3), mar=c(4,4,2,1))
xlim <- c(1,1e5); ylim <- c(-3,3)
DESeq2::plotMA(FDO_TC_normal_res_table, xlim=xlim, ylim=ylim, main="normal", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(FDO_TC_apeglm_res_table, xlim=xlim, ylim=ylim, main="apeglm", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(FDO_TC_ashr_res_table, xlim=xlim, ylim=ylim, main="ashr", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
dev.off()
#volcano plots
# FDO_TC_apeglm_df$significant <- FDO_TC_apeglm_df$padj < 0.05
#
# ggplot(FDO_TC_apeglm_df, aes(x=log2FoldChange, y=-log10(padj))) +
#     geom_point(aes(color=significant)) +
#     scale_color_manual(values=c("gray", "red")) +
#     theme_minimal() +
#     labs(title="Volcano Plot",
#          x="Log2 Fold Change",
#          y="-log10 p-value") +
#     theme(plot.title = element_text(hjust = 0.5))
View(gene_counts_FDO_TC)
keep <- rowSums(DESeq2::counts(dds14) >= 10) >= ncol(GDO_TC_countmatrix)/3
dds14_filt <- dds14[keep,]
keep <- rowSums(DESeq2::counts(dds14) >= 10) >= ncol(GDO_TC_countmatrix)/3
dds14_filt <- dds14[keep,]
#Run shrinkage estimates
GDO_TC_normal_res_table <- lfcShrink(dds14_filt,
coef=2,
type="normal")
GDO_TC_apeglm_res_table <- lfcShrink(dds14_filt,
coef=2,
type="apeglm") # lfcThreshold = 0.585)
GDO_TC_ashr_res_table   <- lfcShrink(dds14_filt,
coef=2,
type="ashr")
#put results tables into data frames
GDO_TC_apeglm_df <- GDO_TC_apeglm_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
GDO_TC_normal_df <- GDO_TC_normal_res_table  %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
GDO_TC_ashr_df <- GDO_TC_ashr_res_table %>%
data.frame() %>%
rownames_to_column(var="gene") %>%
as_tibble()
# Write csv's with significant genes
#ignore rowname numbers with row.names = FALSE, not included as separate column
write.table(GDO_TC_apeglm_df, file = "output/DEG_lists/Gill/GDO_TC_apeglm.csv", row.names = FALSE)
padj.cutoff <- 0.05 # pvalue cut-off
GDO_TC_siggenes <- GDO_TC_apeglm_df %>%
filter(padj < padj.cutoff)
GDO_TC_sig_genes_ashr<- GDO_TC_ashr_df %>%
filter(padj < padj.cutoff)
GDO_TC_sig_genes_normal<- GDO_TC_normal_df %>%
filter(padj < padj.cutoff)
write.table(GDO_TC_siggenes, file = "output/DEG_lists/Gill/GDO_TC_siggene_apeglm.csv", row.names = FALSE)
#saving gene counts as a result of each filtration step
gene_counts_GDO_TC <- as.data.frame(c(nrow(GDO_TC_countmatrix),nrow(dds14_filt),(nrow(GDO_TC_countmatrix)-nrow(dds14_filt)),nrow(GDO_TC_normal_res_table),nrow(GDO_TC_apeglm_res_table),nrow(GDO_TC_ashr_res_table),nrow(GDO_TC_siggenes),nrow(GDO_TC_sig_genes_ashr),nrow(GDO_TC_sig_genes_normal)))
row.names(gene_counts_GDO_TC) <- c("total transcripts","genes_after_filtering","genes_dropped",
"DEGs_all-genes-normal",
"DEGs_all-genes-apeglm","DEGs_all-genes-ashr",
"DEG_apeglm-p0.05","DEG_ashr-p0.05","DEG_normal-p0.05")
#write.csv for the gene count summaries
colnames(gene_counts_GDO_TC) <- "count"
write.table(gene_counts_GDO_TC, file = "output/DEG_lists/Gill/gene_counts_GDO_TC.csv", row.names = TRUE)
# Plot MA
pdf(file= "output/DEG_lists/Gill/GDO_TC_MA_plots.pdf" )
par(mfrow=c(1,3), mar=c(4,4,2,1))
xlim <- c(1,1e5); ylim <- c(-3,3)
DESeq2::plotMA(GDO_TC_normal_res_table, xlim=xlim, ylim=ylim, main="normal", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(GDO_TC_apeglm_res_table, xlim=xlim, ylim=ylim, main="apeglm", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
DESeq2::plotMA(GDO_TC_ashr_res_table, xlim=xlim, ylim=ylim, main="ashr", cex=.8)
abline(h=c(-1.5,1.5), col="dodgerblue", lwd=2)
dev.off()
View(gene_counts_GDO_TC)
View(sequences)
getwd()
library(kableExtra)
library(tidyverse)
bltabl <- read.csv("/home/shared/8TB_HDD_02/graceleuchtenberger/Github/byssus-exp-analysis/output/Mtros-genome-uniprot_blastx.tab", sep = '\t', header = FALSE)
spgo <- read.csv("/home/shared/8TB_HDD_02/graceleuchtenberger/Github/byssus-exp-analysis/uniprot_proteins.tsv", sep = '\t', header = TRUE)
str(spgo)
View(spgo)
View(sequences)
View(bltabl)
bltabl <- read.csv("/home/shared/8TB_HDD_02/graceleuchtenberger/Github/byssus-exp-analysis/output/Mtros-genome-uniprot_blastx_sep.tab", sep = '\t', header = FALSE)
bltabl <- read.csv("/home/shared/8TB_HDD_02/graceleuchtenberger/Github/byssus-exp-analysis/output/Mtros-genome-uniprot_blastx_sep.tab", sep = '\t', header = TRUE)
bltabl <- read.csv("/home/shared/8TB_HDD_02/graceleuchtenberger/Github/byssus-exp-analysis/output/Mtros-genome-uniprot_blastx_sep.tab", sep = '\t', header = FALSE)
reticulate::repl_python()
